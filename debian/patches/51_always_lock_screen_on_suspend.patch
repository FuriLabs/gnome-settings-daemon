Description: when suspending or hibernating, lock the screen if the account
 isn't set to autologin, even if automatic screen lock is disabled.
Author: Marc Deslauriers <marc.deslauriers@canonical.com>
Forwarded: no, likely a Ubuntu-specific preference
Bug-Ubuntu: https://bugs.launchpad.net/ubuntu/+source/gnome-session/+bug/847814

Index: gnome-settings-daemon-3.3.5/plugins/power/gsd-power-manager.c
===================================================================
--- gnome-settings-daemon-3.3.5.orig/plugins/power/gsd-power-manager.c	2012-02-13 17:31:02.536427556 +0100
+++ gnome-settings-daemon-3.3.5/plugins/power/gsd-power-manager.c	2012-02-13 17:31:03.948427566 +0100
@@ -56,6 +56,10 @@
 #define SYSTEMD_DBUS_PATH                       "/org/freedesktop/login1"
 #define SYSTEMD_DBUS_INTERFACE                  "org.freedesktop.login1.Manager"
 
+#define ACCOUNTS_DBUS_NAME                      "org.freedesktop.Accounts"
+#define ACCOUNTS_DBUS_PATH                      "/org/freedesktop/Accounts/User"
+#define ACCOUNTS_DBUS_INTERFACE                 "org.freedesktop.Accounts.User"
+
 #define UPOWER_DBUS_NAME                        "org.freedesktop.UPower"
 #define UPOWER_DBUS_PATH                        "/org/freedesktop/UPower"
 #define UPOWER_DBUS_PATH_KBDBACKLIGHT           "/org/freedesktop/UPower/KbdBacklight"
@@ -160,6 +164,8 @@
         GCancellable            *bus_cancellable;
         GDBusProxy              *upower_proxy;
         GDBusProxy              *upower_kdb_proxy;
+        GDBusProxy              *accounts_proxy;
+        gchar                   *accounts_object_path;
         gint                     kbd_brightness_now;
         gint                     kbd_brightness_max;
         gint                     kbd_brightness_old;
@@ -3101,6 +3107,57 @@
 }
 
 static gboolean
+account_is_autologin (GsdPowerManager *manager)
+{
+        gboolean ret = FALSE;
+        GVariant *retval = NULL;
+        GVariant *automatic_login = NULL;
+        GError *error = NULL;
+
+        /* not yet connected to accounts */
+        if (manager->priv->accounts_proxy == NULL) {
+                g_warning ("accounts is not available");
+                return FALSE;
+        }
+
+        retval = g_dbus_proxy_call_sync (manager->priv->accounts_proxy,
+                                         "Get",
+                                         g_variant_new ("(ss)",
+                                                        ACCOUNTS_DBUS_INTERFACE,
+                                                        "AutomaticLogin"),
+                                         G_DBUS_CALL_FLAGS_NONE,
+                                         -1, NULL,
+                                         &error);
+        if (retval == NULL) {
+                /* abort as the DBUS method failed */
+                g_warning ("Get AutomaticLogin failed: %s", error->message);
+                g_error_free (error);
+                return FALSE;
+        }
+
+        g_variant_get (retval, "(v)", &automatic_login);
+        g_variant_unref (retval);
+
+        if (automatic_login != NULL) {
+                g_variant_get (automatic_login, "b", &ret);
+                g_variant_unref (automatic_login);
+        }
+
+        return ret;
+}
+
+static gchar *
+accounts_object_path ()
+{
+        gchar *object_path;
+
+        object_path = g_strdup_printf ("/org/freedesktop/Accounts/User%d",
+                                       getuid ());
+
+        return object_path;
+}
+
+static gboolean
 idle_sleep_cb (GsdPowerManager *manager)
 {
         gboolean is_idle;
@@ -3396,6 +3453,22 @@
 }
 
 static void
+accounts_proxy_ready_cb (GObject             *source_object,
+                         GAsyncResult        *res,
+                         gpointer             user_data)
+{
+        GError *error = NULL;
+        GsdPowerManager *manager = GSD_POWER_MANAGER (user_data);
+
+        manager->priv->accounts_proxy = g_dbus_proxy_new_for_bus_finish (res, &error);
+        if (manager->priv->accounts_proxy == NULL) {
+                g_warning ("Could not connect to Accounts: %s",
+                           error->message);
+                g_error_free (error);
+        }
+}
+
+static void
 power_keyboard_proxy_ready_cb (GObject             *source_object,
                                GAsyncResult        *res,
                                gpointer             user_data)
@@ -3472,12 +3545,13 @@
                         UpSleepKind sleep_kind,
                         GsdPowerManager *manager)
 {
-        gboolean do_lock;
+        gboolean is_autologin;
 
-        do_lock = g_settings_get_boolean (manager->priv->settings_screensaver,
-                                          "lock-enabled");
-        if (!do_lock)
+        is_autologin = account_is_autologin (manager);
+        if (is_autologin) {
+                g_debug ("account has autologin enabled, skipping lock");
                 return;
+        }
 
         if (manager->priv->screensaver_proxy != NULL) {
                 g_debug ("doing gnome-screensaver lock");
@@ -3641,6 +3715,18 @@
                                   power_keyboard_proxy_ready_cb,
                                   manager);
 
+        /* connect to Accounts for autologin information */
+        manager->priv->accounts_object_path = accounts_object_path();
+        g_dbus_proxy_new_for_bus (G_BUS_TYPE_SYSTEM,
+                                  G_DBUS_PROXY_FLAGS_DO_NOT_LOAD_PROPERTIES,
+                                  NULL,
+                                  ACCOUNTS_DBUS_NAME,
+                                  manager->priv->accounts_object_path,
+                                  "org.freedesktop.DBus.Properties",
+                                  NULL,
+                                  accounts_proxy_ready_cb,
+                                  manager);
+
         /* connect to the screensaver */
         g_dbus_proxy_new_for_bus (G_BUS_TYPE_SESSION,
                                   G_DBUS_PROXY_FLAGS_DO_NOT_LOAD_PROPERTIES,
@@ -3808,6 +3894,10 @@
                 manager->priv->upower_proxy = NULL;
         }
 
+        if (manager->priv->accounts_proxy != NULL)
+                g_object_unref (manager->priv->accounts_proxy);
+        g_free (manager->priv->accounts_object_path);
+
         if (manager->priv->session_proxy != NULL) {
                 g_object_unref (manager->priv->session_proxy);
                 manager->priv->session_proxy = NULL;
