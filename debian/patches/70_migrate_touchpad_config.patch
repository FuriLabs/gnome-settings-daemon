diff -Nur -x '*.orig' -x '*~' gnome-settings-daemon-2.27.90/plugins/mouse/gsd-mouse-manager.c gnome-settings-daemon-2.27.90.new/plugins/mouse/gsd-mouse-manager.c
--- gnome-settings-daemon-2.27.90/plugins/mouse/gsd-mouse-manager.c	2009-08-12 10:15:00.000000000 +0100
+++ gnome-settings-daemon-2.27.90.new/plugins/mouse/gsd-mouse-manager.c	2009-08-14 15:22:44.872297479 +0100
@@ -69,6 +69,10 @@
 #define KEY_SCROLL_METHOD       GCONF_TOUCHPAD_DIR "/scroll_method"
 #define KEY_PAD_HORIZ_SCROLL    GCONF_TOUCHPAD_DIR "/horiz_scroll_enabled"
 
+#define KEY_TOUCHPAD_MIGRATION_NEEDED   GCONF_TOUCHPAD_DIR "/config_migration_needed"
+#define KEY_OLD_PAD_HORIZ_SCROLL        GCONF_MOUSE_DIR "/pad_horiz_scroll"
+#define KEY_OLD_PAD_VERT_SCROLL GCONF_MOUSE_DIR "/pad_vert_scroll"
+
 struct GsdMouseManagerPrivate
 {
         guint notify;
@@ -988,6 +992,63 @@
         manager->priv = GSD_MOUSE_MANAGER_GET_PRIVATE (manager);
 }
 
+static void
+migrate_touchpad_config (GConfClient *client)
+{
+        GConfValue *old_pad_horiz_scroll_val, *old_pad_vert_scroll_val;
+        gboolean old_pad_horiz_scroll = FALSE; /* This was the old default setting */
+        gboolean old_pad_vert_scroll = TRUE; /* This was the old default setting */
+        
+        /* Here we migrate some settings.
+         *
+         * The tap_to_click setting doesn't need to be migrated. It was ON by
+         * default in the old version and OFF by default now. If the user disabled
+         * it in the old version, then it will still be disabled now.
+         *
+         * The touchpad_enabled setting from the old config has now been deprecated, so
+         * doesn't need to be migrated.
+         *
+         * There is now a disable_while_typing preference which was not present before, so there's
+         * nothing to migrate this from.
+         */
+        
+        if (gconf_client_get_bool (client, KEY_TOUCHPAD_MIGRATION_NEEDED, NULL)); {
+                /* Migrate the touchpad scrolling settings */
+                old_pad_horiz_scroll_val = gconf_client_get (client, KEY_OLD_PAD_HORIZ_SCROLL, NULL);
+                old_pad_vert_scroll_val = gconf_client_get (client, KEY_OLD_PAD_VERT_SCROLL, NULL);
+                if (old_pad_horiz_scroll_val != NULL) {
+                        /* Read the old user setting, if it exists in the GConf database */
+                        old_pad_horiz_scroll = gconf_value_get_bool (old_pad_horiz_scroll_val);
+                        gconf_value_free (old_pad_horiz_scroll_val);
+                }
+                if (old_pad_vert_scroll_val != NULL) {
+                        /* Read the old user setting, if it exists in the GConf database */
+                        old_pad_vert_scroll = gconf_value_get_bool (old_pad_vert_scroll_val);
+                        gconf_value_free (old_pad_vert_scroll_val);
+                }
+                
+                if (!old_pad_vert_scroll && !old_pad_horiz_scroll) {
+                        /* The user had disabled vertical scrolling and left the horizontal settings
+                         * as default (off). In this case, we disable scrolling in the new config. 
+                         * If the user explicitly enabled horizontal scrolling,
+                         * then we leave scrolling enabled. It's not possible to have horizontal scrolling 
+                         * without vertical scrolling with the new settings.
+                         */
+                        gconf_client_set_int (client, KEY_SCROLL_METHOD, 0, NULL);
+                }
+                
+                if (old_pad_horiz_scroll) {
+                        /* The user explicitly enabled horizontal scrolling, so
+                         * copy this to the new config.
+                         */
+                        gconf_client_set_bool (client, KEY_PAD_HORIZ_SCROLL, TRUE, NULL);
+                }
+                
+                /* Make sure we record that we've migrated the config */
+                gconf_client_set_bool (client, KEY_TOUCHPAD_MIGRATION_NEEDED, FALSE, NULL);
+        }
+}
+
 static gboolean
 gsd_mouse_manager_idle_cb (GsdMouseManager *manager)
 {
@@ -1013,6 +1074,8 @@
                                           GCONF_TOUCHPAD_DIR,
                                           (GConfClientNotifyFunc) mouse_callback);
         manager->priv->syndaemon_spawned = FALSE;
+        
+        migrate_touchpad_config (client);
 
 #ifdef HAVE_X11_EXTENSIONS_XINPUT_H
         set_devicepresence_handler (manager);
