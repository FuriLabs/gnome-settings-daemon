From a9388f70abc975da31c90867d9ab9bd7253b1d30 Mon Sep 17 00:00:00 2001
From: Bastien Nocera <hadess@hadess.net>
Date: Fri, 30 Mar 2012 09:36:58 +0000
Subject: media-keys: Get the environment from gnome-keyring

When launching custom applications.

https://bugzilla.gnome.org/show_bug.cgi?id=662528
---
Index: gnome-settings-daemon-3.4.0/plugins/media-keys/gsd-media-keys-manager.c
===================================================================
--- gnome-settings-daemon-3.4.0.orig/plugins/media-keys/gsd-media-keys-manager.c	2012-04-03 16:25:00.312602471 +0200
+++ gnome-settings-daemon-3.4.0/plugins/media-keys/gsd-media-keys-manager.c	2012-04-03 16:25:00.332602472 +0200
@@ -69,6 +69,10 @@
 #define GNOME_SESSION_DBUS_PATH "/org/gnome/SessionManager"
 #define GNOME_SESSION_DBUS_INTERFACE "org.gnome.SessionManager"
 
+#define GNOME_KEYRING_DBUS_NAME "org.gnome.keyring"
+#define GNOME_KEYRING_DBUS_PATH "/org/gnome/keyring/daemon"
+#define GNOME_KEYRING_DBUS_INTERFACE "org.gnome.keyring.Daemon"
+
 #define GCONF_BINDING_DIR "/desktop/gnome/keybindings"
 
 static const gchar introspection_xml[] =
@@ -360,6 +364,57 @@
         return cmd;
 }
 
+static char **
+get_keyring_env (GsdMediaKeysManager *manager)
+{
+	GError *error = NULL;
+	GVariant *variant, *item;
+	GVariantIter *iter;
+	char **envp;
+
+	variant = g_dbus_connection_call_sync (manager->priv->connection,
+					       GNOME_KEYRING_DBUS_NAME,
+					       GNOME_KEYRING_DBUS_PATH,
+					       GNOME_KEYRING_DBUS_INTERFACE,
+					       "GetEnvironment",
+					       NULL,
+					       NULL,
+					       G_DBUS_CALL_FLAGS_NONE,
+					       -1,
+					       NULL,
+					       &error);
+	if (variant == NULL) {
+		g_warning ("Failed to call GetEnvironment on keyring daemon: %s", error->message);
+		g_error_free (error);
+		return NULL;
+	}
+
+	envp = g_get_environ ();
+
+	g_variant_get (variant, "(a{ss})", &iter);
+
+	while ((item = g_variant_iter_next_value (iter))) {
+		char *key;
+		char *value;
+
+		g_variant_get (item,
+			       "{ss}",
+			       &key,
+			       &value);
+
+		envp = g_environ_setenv (envp, key, value, TRUE);
+
+		g_variant_unref (item);
+		g_free (key);
+		g_free (value);
+	}
+
+	g_variant_iter_free (iter);
+	g_variant_unref (variant);
+
+	return envp;
+}
+
 static void
 execute (GsdMediaKeysManager *manager,
          char                *cmd,
@@ -385,15 +440,21 @@
         }
 
         if (g_shell_parse_argv (exec, &argc, &argv, NULL)) {
+		char   **envp;
+
+		envp = get_keyring_env (manager);
+
                 retval = g_spawn_async (g_get_home_dir (),
                                         argv,
-                                        NULL,
+                                        envp,
                                         G_SPAWN_SEARCH_PATH,
                                         NULL,
                                         NULL,
                                         NULL,
                                         &error);
+
                 g_strfreev (argv);
+                g_strfreev (envp);
         }
 
         if (retval == FALSE) {
